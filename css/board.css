#board {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  width: max-content;
  max-width: 100%;
  gap: 1em;
  position: relative;
  transition: 0.5s gap ease-out;
  isolation: isolate;
}

#board::after {
  content: "";
  position: absolute;
  inset: 0;
  background-image: var(--selected);
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  opacity: 0.5;
  pointer-events: none;
  z-index: 1;
  animation: 0.5s viewImageHide ease-out forwards;
}

#board[data-view] {
  gap: 0;
  transition: 0.2s;
}

#board[data-view]::after {
  animation: 0.5s viewImage ease-out forwards;
  pointer-events: all;
}

@keyframes viewImage {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes viewImageHide {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

#board[data-won] {
  animation: 2s cubic-bezier(0.5, -0.5, 0.35, 1.2) boardWon;
  gap: 0em;
}

#board[data-won] > .piece {
  animation: 2s cubic-bezier(0.5, -0.5, 0.35, 1.2) boardWonPiece forwards;
}

#board[data-won] .pieceNum {
  animation: 2s cubic-bezier(0.5, -0.5, 0.35, 1.2) boardWonPieceNum forwards;
}

@keyframes boardWon {
  0% {
    gap: 1em;
  }
  25% {
    gap: 2em;
  }
  100% {
    gap: 0em;
  }
}

@keyframes boardWonPiece {
  0% {
    box-shadow: inset 0 0 0 0.5em hsla(0, 0%, 100%, 0.2);
  }
  25% {
    box-shadow: inset 0 0 0 0.5em hsla(0, 0%, 100%, 0.5);
  }
  100% {
    box-shadow: inset 0 0 0 0.2em hsla(0, 0%, 100%, 0.1);
  }
}

@keyframes boardWonPieceNum {
  0% {
    opacity: 1;
  }
  25% {
    opacity: 0.8;
  }
  100% {
    opacity: 0;
  }
}

.piece {
  display: block;
  background-image: var(--selected);
  background-size: 300% 300%;
  background-repeat: no-repeat;
  display: block;
  width: 14em;
  height: 14em;
  border: none;
  /* border: solid 0.5em hsla(0, 0%, 100%, 0.2); */
  position: relative;
  --opacity: 0.2;
  box-shadow: inset 0 0 0 0.5em hsla(0, 0%, 100%, var(--opacity));
  transition: 0.5s all cubic-bezier(0, 0.38, 0.53, 1.03), 0s background;
}

.piece[data-animate] {
  /* animation: 1s appearPiece cubic-bezier(0.1, 0.6, 0.2, 1.2) forwards; */
  animation: 1.5s appearPiece cubic-bezier(0.6, 0, 0.4, 1) forwards;
  transform: rotate3d(0);
}

@keyframes appearPiece {
  0% {
    opacity: 0;
    transform: perspective(40em) rotateY(360deg) scale(0);
  }
  10% {
    transform: perspective(40em) rotateY(360deg) scale(0);
  }
  22.5% {
    transform: perspective(40em) rotateY(270deg) scale(0.5);
  }
  55% {
    transform: perspective(40em) rotateY(135deg) scale(1);
  }
  100% {
    opacity: 1;
    transform: perspective(40em) rotateY(0deg) scale(1);
  }
}

@media (max-width: 600px) {
  .piece {
    width: calc(33.33vw - 1em);
    height: calc(33.33vw - 1em);
  }
}

/* #board[data-error] {
  pointer-events: none;
  position: relative;
}

#board[data-error] > .piece {
  background-color: hsl(0, 70%, 20%);
  position: relative;
}

#board[data-error]::before {
  content: "";
  position: absolute;
  left: calc(50% - 2.5em);
  top: calc(50% - 2.5em);
  width: 5em;
  height: 5em;
  z-index: 100;
  background-image: url(img/error.png);
  background-size: 100% 100%;
  image-rendering: pixelated;
} */

/* #board[data-error]::after {
  content: "";
  font-size: 1.5rem;
  position: absolute;
  left: 50%;
  top: calc(50% - 2.5em + 6em);
  transform: translateX(-50%);
  text-align: center;
} */

#board[data-loading] {
  pointer-events: none;
  position: relative;
}

@property --spin-color {
  syntax: "<number>"; /* <- defined as type number for the transition to work */
  initial-value: 0;
  inherits: false;
}

#board[data-loading]::before {
  content: "";
  position: absolute;
  left: calc(50% - 3em);
  top: calc(50% - 3em);

  /* background: conic-gradient(transparent, hsl(120, 60%, 60%)); */
  /* --spin-color-comp: hsl(120, 60%, 60%); */
  --spin-color-comp: hsl(var(--spin-color), 50%, 80%);

  background: conic-gradient(
    from 0.15turn,
    transparent 0turn,
    transparent 0.05turn,
    var(--spin-color-comp) 0.49turn,
    var(--spin-color-comp) 0.5turn,
    transparent 0.5turn,
    transparent 0.55turn,
    var(--spin-color-comp) 0.99999turn
  );

  border-radius: 50%;
  width: 6em;
  height: 6em;
  z-index: 100;

  --size: 4.5em;

  -webkit-mask: radial-gradient(farthest-side, #000 98%, #0000) center/var(--size) var(--size)
      no-repeat,
    linear-gradient(#000 0 0);
  -webkit-mask-composite: destination-out;

  mask: radial-gradient(farthest-side, #000 98%, #0000) center/var(--size) var(--size) no-repeat,
    linear-gradient(#000 0 0);
  mask-composite: exclude;

  animation: 2s loadingSpinner cubic-bezier(0.35, 0.35, 0.4, 0.9) infinite,
    8s rgbBackground infinite;
}

@keyframes loadingSpinner {
  0% {
    transform: rotate(0deg);
  }
  80%,
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rgbBackground {
  0% {
    /* --spin-color: hsl(0, 100%, 50%); */
    --spin-color: 0;
  }
  50% {
    /* --spin-color: hsl(180, 100%, 50%); */
    --spin-color: 180;
  }
  100% {
    /* --spin-color: hsl(360, 100%, 50%); */
    --spin-color: 360;
  }
}

#board[data-loading] > .piece {
  background-color: black;
  position: relative;
  /* overflow: hidden; */
}

#board[data-loading] > .piece::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, transparent 40%, hsla(0, 0%, 100%, 0.2) 50%, transparent 60%);
  background-size: 500% 100%;

  animation: 2s loadingPiece linear infinite;
}

/* delays */
/* #board[data-loading] {
  --delay: 0.1s;
}

#board[data-loading] > :nth-child(1):before {
  animation-delay: calc(var(--delay) * 1);
}

#board[data-loading] > :nth-child(2):before {
  animation-delay: calc(var(--delay) * 2);
}

#board[data-loading] > :nth-child(3):before {
  animation-delay: calc(var(--delay) * 3);
}

#board[data-loading] > :nth-child(4):before {
  animation-delay: calc(var(--delay) * 4);
}

#board[data-loading] > :nth-child(5):before {
  animation-delay: calc(var(--delay) * 5);
}

#board[data-loading] > :nth-child(6):before {
  animation-delay: calc(var(--delay) * 6);
}

#board[data-loading] > :nth-child(7):before {
  animation-delay: calc(var(--delay) * 7);
}

#board[data-loading] > :nth-child(8):before {
  animation-delay: calc(var(--delay) * 8);
}

#board[data-loading] > :nth-child(9):before {
  animation-delay: calc(var(--delay) * 9);
} */

/* -- end delays */

@keyframes loadingPiece {
  0% {
    background-position: 0% 0%;
  }
  79% {
    background-position: 100% 0%;
  }
  80%,
  100% {
    background-position: 100% 0%;
  }
}

.howToPlay {
  --opacity: 0.05;
  box-shadow: inset 0 0 0 0.5em hsla(0, 0%, 100%, var(--opacity)),
    0 0.5em 2em 0em hsla(0, 0%, 100%, 0) !important;
}

.piece:hover {
  /* border-color: hsla(0, 0%, 100%, 0.7); */
  --opacity: 0.7;
  box-shadow: inset 0 0 0 0.5em hsla(0, 0%, 100%, var(--opacity)),
    0 0.5em 2em 0em hsla(0, 0%, 100%, 0.5);
  z-index: 1;
}

.piece:focus {
  outline: none !important;
}

.piece:focus-visible {
  /* border-color: hsla(0, 0%, 100%, 1); */
  --opacity: 1;
  box-shadow: inset 0 0 0 0.5em hsla(0, 0%, 100%, var(--opacity)),
    0 0.5em 2em 0em hsla(0, 0%, 100%, 0.5) !important;
  z-index: 10;
}

.piece:active {
  /* border-color: hsla(0, 0%, 100%, 1); */
  --opacity: 1;
}

.piece[data-empty] {
  background-image: none;
  background-color: hsl(200, 0%, 0%);
  --opacity: 0.15;
}

.pieceNum {
  background-color: hsla(0, 0%, 0%, 0.8);
  border: solid 0.1em hsla(0, 0%, 100%, 0.4);
  width: 2em;
  height: 2em;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0.5em;
  left: 0.5em;
}

.piece[data-empty] > .pieceNum {
  opacity: 0;
}

#howToPlay {
  position: absolute;
  left: 50%;
  top: 50%;

  transform: translate(-50%, -50%);

  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5em;
  padding: 0.5em;

  background-color: hsla(0, 0%, 0%, 0.8);
  border: solid 0.2em hsla(0, 0%, 100%, 0.5);
  border-radius: 0.5em;
  font-size: 1rem;
  z-index: 10;
}
